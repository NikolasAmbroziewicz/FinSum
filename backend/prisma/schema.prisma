// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(50)
  surname  String @db.VarChar(50)
  email    String @unique @db.VarChar(50)
  password String @db.VarChar(256)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account        account[]
  icome          income[]
  metal          metal[]
  stock_wallet   stock_wallet[]
  cryptocurrency_wallet cryptocurrency_wallet[]
}
model income {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(50)
  amount   Decimal  @db.Decimal()
  currency String   @db.VarChar(10)
  user     user     @relation(fields: [id], references: [id])
  date DateTime @db.Timestamp() @default(now())
}

model account {
  id       Int       @id @default(autoincrement())
  currency String    @db.VarChar(20)
  user     user      @relation(fields: [id], references: [id])
  expense  expense[]
  cash cash[]
  name String    @db.VarChar(50)
}

model expense {
  id          Int      @id @default(autoincrement())
  amount      Decimal  @db.Decimal()
  title       String   @db.VarChar(50)
  description String   @db.VarChar()
  date        DateTime @db.Timestamp() @default(now())
  account     account  @relation(fields: [id], references: [id])
}

model cash {
  id          Int      @id @default(autoincrement())
  amount      Decimal  @db.Decimal()
  currency    String   @db.VarChar()
  date        DateTime @db.Timestamp() @default(now())
  account     account  @relation(fields: [id], references: [id])
}

model metal {
  id          Int      @id @default(autoincrement())
  metal_name  String   @db.VarChar(50)
  coin_name   String   @db.VarChar(50)
  unit        String   @db.VarChar(10)
  amount      Int
  price_buy   Decimal  @db.Decimal()
  price_sold  Decimal  @db.Decimal()
  date_bought DateTime @db.Timestamp() @default(now())
  date_sold   DateTime @db.Timestamp()
  user        user     @relation(fields: [id], references: [id])
}

model stock_wallet {
  id Int @id @default(autoincrement())
  name String @db.VarChar(50)
  user user @relation(fields: [id], references: [id])
  bound bond[]
  stock stock[]
}

model bond {
  id                 Int      @id @default(autoincrement())
  country            String   @db.VarChar(50)
  percent            Decimal  @db.Decimal()
  amount             Int      @db.Integer
  price_each         Decimal  @db.Decimal()
  date_bought        DateTime @db.Timestamp() @default(now())
  date_sold          DateTime @db.Timestamp()
  redemption_penalty Int      @db.Integer
  time_interest      Int      @db.Integer
  stock_wallet stock_wallet @relation(fields: [id], references: [id])
}

model stock {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(20)
  amount      Int      @db.Integer
  ticker      String   @db.VarChar(10)
  price_buy   Int      @db.Integer
  price_sold  Int      @db.Integer
  date_bought DateTime @db.Timestamp() @default(now())
  date_sold   DateTime @db.Timestamp()
  stock_wallet stock_wallet @relation(fields: [id], references: [id])
}
model cryptocurrency_wallet {
  id Int @id @default(autoincrement())
  user user @relation(fields: [id], references: [id])

  cryptocurrency cryptocurrency[]
}

model cryptocurrency {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(40)
  amount        Decimal @db.Decimal()
  ticker       String   @db.VarChar(20)
  price_bought Decimal  @db.Decimal()
  price_sold   Decimal  @db.Decimal()
  date_bought  DateTime @db.Timestamp() @default(now())
  date_sold    DateTime @db.Timestamp()
  stock_name   String   @db.VarChar(40)

  cryptocurrency_wallet cryptocurrency_wallet @relation(fields: [id], references: [id])
}